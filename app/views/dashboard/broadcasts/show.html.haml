= content_for(:page_actions) do
  - state_machine = BroadcastStateMachine.new(@broadcast.status)
  - if state_machine.may_transition_to?(:running)
    = button_to(dashboard_broadcast_path(@broadcast), params: { broadcast: { desired_status: "running" } }, method: :patch, class: "btn btn-outline-success", form_class: "d-inline", form: { data: { turbo_confirm: translate(:"titles.actions.data_confirm")}}) do
      %i.icon.ti.ti-player-play
      = translate(:"titles.broadcasts.start")
  - elsif state_machine.may_transition_to?(:stopped)
    = button_to(dashboard_broadcast_path(@broadcast), params: { broadcast: { desired_status: "stopped" } }, method: :patch, class: "btn btn-outline-danger", form_class: "d-inline", form: { data: { turbo_confirm: translate(:"titles.actions.data_confirm")}}) do
      %i.icon.ti.ti-player-pause
      = translate(:"titles.broadcasts.stop")

  - if state_machine.updatable?
    = render("shared/edit_resource_page_action", path: edit_dashboard_broadcast_path(@broadcast))

    = render "shared/resource_related_links" do
      = render("shared/destroy_resource_page_action", path: dashboard_broadcast_path(@broadcast))

.card
  .card-body
    = show_for(@broadcast) do |f|
      = f.attribute :id
      = f.attribute :status, value: @broadcast.status.humanize

      = f.attribute :audio_file do
        - if @broadcast.audio_file.attached?
          = audio_tag(@broadcast.audio_file, controls: true)

      = f.attribute :created_at, value: local_time(@broadcast.created_at)
      = f.attribute :updated_at, value: local_time(@broadcast.updated_at)

    .hr-text Beneficiary filters

    .row.mb-3
      .col
        %label.form-label
          Field
      .col
        %label.form-label
          Operator
      .col
        %label.form-label
          Value

    - filter = BeneficiaryFilterData.new(data: @broadcast.beneficiary_filter, address_data_field_name: CountryAddressData.address_field_name(current_account.iso_country_code))
    - filter.data.fields.values.each do |field|
      - next if filter.address_data_field.present? && filter.address_fields.values.include?(field) && field != filter.address_data_field
      .row.mb-3{id: "beneficiary_filter_#{field.name}"}
        .col
          %input.field-name.form-control{type: "text", value: field.field_definition.human_name(namespace: current_account.iso_country_code), readonly: true }
        .col
          %input.field-operator.form-control{type: "text", value: field.field_definition.human_operator(field.operator), readonly: true }
        .col
          - if field.operator == "between"
            .row
              .col
                %input.field-value.form-control{type: "text", value: field.value[0], readonly: true }
              .col
                %input.field-value.form-control{type: "text", value: field.value[1], readonly: true }
          - elsif field == filter.address_data_field
            %div{
              data: {
                controller: "treeview",
                "treeview-data-value": treeview_address_data.to_json,
                "treeview-selected-value": Array(filter.address_data_field.value).to_json,
              }
            }
          - elsif field.value.is_a?(Array)
            %select.input-tags-readonly.form-control{readonly: true, multiple: true}
              - field.value.each do |value|
                %option{selected: true}
                  = field.field_definition.human_value(value)
          - else
            %input.field-value.form-control{type: "text", value: field.field_definition.human_value(field.value), readonly: true }
