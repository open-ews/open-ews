.card.col-md-6
  = simple_form_for([:dashboard, resource]) do |f|
    .card-body
      .row
        .col
          = f.input :channel
        .col
          = f.input :audio_file, as: :file, required: resource.new_record?,
            input_html: { direct_upload: true, accept: Broadcast::AUDIO_CONTENT_TYPES.join(", ") }

      .hr-text Beneficiary Filters

      .row{data: { controller: "beneficiary-filter-field" }}
        .col
          %label.form-label Field
          .input-group.mb-2
            %span.input-group-text
              %input.form-check-input.m-0{type: "checkbox", checked: true, data: { "beneficiary-filter-field-target": "toggleElement", action:  "beneficiary-filter-field#toggle" }}
            %input.form-control{type: "text", value: "Gender", readonly: true, data: { "beneficiary-filter-field-target": "fieldName" } }
        .col
          = f.input "beneficiary_filter", label: "Operator", as: :select, collection: ["Equals", "Not Equals", "Is NULL"], input_html: { data: { "beneficiary-filter-field-target": "operator" } }
        .col
          = f.input "beneficiary_filter", label: "Value", as: :select, collection: ["Male", "Female"], input_html: { data: { "beneficiary-filter-field-target": "value" } }

      .row{data: { controller: "beneficiary-filter-field" }}
        .col
          .input-group.mb-2
            %span.input-group-text
              %input.form-check-input.m-0{type: "checkbox", checked: false, data: { "beneficiary-filter-field-target": "toggleElement", action:  "beneficiary-filter-field#toggle" }}
            %input.form-control{type: "text", value: "Disability Status", readonly: true, data: { "beneficiary-filter-field-target": "fieldName" } }
        .col
          = f.input "beneficiary_filter", label: false, as: :select, collection: ["Equals", "Not Equals", "Is NULL"], input_html: { data: { "beneficiary-filter-field-target": "operator" } }
        .col
          = f.input "beneficiary_filter", label: false, as: :select, collection: ["Active", "Disabled"], input_html: { data: { "beneficiary-filter-field-target": "value" } }

      .row{data: { controller: "beneficiary-filter-field" }}
        .col
          .input-group.mb-2
            %span.input-group-text
              %input.form-check-input.m-0{type: "checkbox", checked: false, data: { "beneficiary-filter-field-target": "toggleElement", action:  "beneficiary-filter-field#toggle" }}
            %input.form-control{type: "text", value: "Date of Birth", readonly: true, data: { "beneficiary-filter-field-target": "fieldName" } }
        .col
          = f.input "beneficiary_filter", label: false, as: :select, collection: ["Equals", "Not Equals", "Greater Than", "Greater Than or Equals to", "Less Than", "Less Than or Equals to", "Is NULL"], input_html: { data: { "beneficiary-filter-field-target": "operator" } }
        .col
          = f.input "beneficiary_filter", label: false, as: :date, input_html: { data: { "beneficiary-filter-field-target": "value" } }

      .row{data: { controller: "beneficiary-filter-field" }}
        .col
          .input-group.mb-2
            %span.input-group-text
              %input.form-check-input.m-0{type: "checkbox", checked: false, data: { "beneficiary-filter-field-target": "toggleElement", action:  "beneficiary-filter-field#toggle" }}
            %input.form-control{type: "text", value: "Language Code", readonly: true, data: { "beneficiary-filter-field-target": "fieldName" } }
        .col
          = f.input "beneficiary_filter", label: false, as: :select, collection: ["Equals", "Not Equals", "Contains", "Not Contains", "Starts With", "Is NULL"], input_html: { data: { "beneficiary-filter-field-target": "operator" } }
        .col
          = f.input "beneficiary_filter", label: false, as: :string, input_html: { data: { "beneficiary-filter-field-target": "value" } }

      .row{data: { controller: "beneficiary-addresses-filter-field" }}
        .col
          .input-group.mb-2
            %span.input-group-text
              %input.form-check-input.m-0{type: "checkbox", checked: false, data: { "beneficiary-addresses-filter-field-target": "toggleElement", action:  "beneficiary-addresses-filter-field#toggle", "bs-toggle": "collapse", "bs-target": "#addresses" }}
            %input.form-control{type: "text", value: "Addresses", readonly: true, data: { "beneficiary-addresses-filter-field-target": "fieldName" }}

          #addresses.collapse.overflow-auto{style: "max-height: 200px", data: { controller: "address-treeview", "address-treeview-data-value": BeneficiaryAddress.address_data("kh").to_json,  "address-treeview-field-name-value": "commune_codes" }}

    .card-footer.text-end
      = f.button :submit, class: 'btn btn-primary'
